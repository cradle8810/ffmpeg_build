name: Build ffmpeg

on:
  workflow_dispatch:
  push:

permissions:
  actions: write
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo DEBIAN_FRONTEND=noninteractive \
          apt-get install -y \
            autoconf \
            automake \
            build-essential \
            ccache \
            cmake \
            git \
            libnuma-dev \
            libssl-dev \
            meson \
            nasm \
            ninja-build \
            pkg-config \
            python3-pip \
            yasm \
            xutils-dev

    - name: Checkout build script
      uses: actions/checkout@v4
    
    - name: chmod +x *.sh
      run: |
        chmod +x *.sh

    - name: Restore Ccaches
      uses: actions/cache/restore@v3
      with:
        key: ccache_build
        path: "/home/runner/.cache/ccache"

    - name: Show ccache configurations/stats
      run: |
        ccache -p
        ccache -s

    - name: Build libpciaccess
      run: |
        ./libpciaccess.sh

    - name: Build libdrm
      run: |
        ./libdrm.sh

    - name: Build libva
      run: |
        ./libva.sh

    - name: Clone Intel gmmlib
      uses: actions/checkout@v4
      with:
        repository: 'intel/gmmlib'
        path: gmmlib

    - name: Build Intel gmmlib
      run: |
        ./gmmlib.sh

    - name: Clone Intel media-driver
      uses: actions/checkout@v4
      with:
        repository: 'intel/media-driver'
        path: media-driver

    - name: Build Intel media-driver
      id: build_intel_media_driver
      run: |
        ./media-driver.sh

    - name: Clone Intel media-SDK
      uses: actions/checkout@v4
      with:
        repository: 'Intel-Media-SDK/MediaSDK'
        path: media-sdk

    - name: Build Intel media-SDK
      run: |
        ./media-sdk.sh

    - name: Build x264
      run: |
        ./x264.sh

    - name: Build ffmpeg
      run: |
        ./ffmpeg.sh

    - name: Copy artifacts
      run: |
        cp ffmpeg/build/bin/ffmpeg-source .

    - name: Save Ccaches
      uses: actions/cache/save@v3
      with:
        key: ccache_build
        path: "/home/runner/.cache/ccache"
      if: ${{ always() || cancelled() }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ccache-build
        path: "ffmpeg"

  test:
    runs-on: ubuntu-24.04
    needs:
      - build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: binary

      - name: Print ffmpeg Version
        run: |
          ./ffmpeg -version

      - name: Print ffmpeg Encorders
        run: |
          ./ffmpeg -encoders

      - name: Print ffmpeg Encoders grep qsv
        run: |
          ./ffmpeg -encoders | grep qsv

      - name: Print ffmpeg Encoders grep vaapi
        run: |
          ./ffmpeg -encoders | grep vaapi
